{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\charr\\\\Desktop\\\\testSite\\\\client\\\\src\\\\components\\\\UI\\\\Input\\\\index.js\";\nimport React from 'react';\nimport { Form } from 'react-bootstrap';\n\n/**\n* @author\n* @function Input\n**/\n\nconst Input = props => {\n  let input = null;\n  switch (props.type) {\n    case 'select':\n      input = /*#__PURE__*/React.createElement(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 15\n        }\n      }, props.label && /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 33\n        }\n      }, props.label), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control form-control-sm\",\n        value: props.value,\n        onChange: props.onChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 19\n        }\n      }, props.placeholder), props.options.length > 0 ? props.options.map((option, index) => /*#__PURE__*/React.createElement(\"option\", {\n        key: index,\n        value: option.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 23\n        }\n      }, option.name)) : null));\n      break;\n    case 'text':\n    default:\n      input = /*#__PURE__*/React.createElement(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }\n      }, props.label && /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 33\n        }\n      }, props.label), /*#__PURE__*/React.createElement(Form.Control, Object.assign({\n        type: props.type,\n        placeholder: props.placeholder,\n        value: props.value,\n        onChange: props.onChange\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Form.Text, {\n        className: \"text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }, props.errorMessage));\n  }\n  return input;\n};\nexport default Input;","map":{"version":3,"names":["React","Form","Input","props","input","type","label","value","onChange","placeholder","options","length","map","option","index","name","errorMessage"],"sources":["C:/Users/charr/Desktop/testSite/client/src/components/UI/Input/index.js"],"sourcesContent":["import React from 'react';\nimport { Form } from 'react-bootstrap';\n\n/**\n* @author\n* @function Input\n**/\n\nconst Input = (props) => {\n\n  let input = null;\n  switch(props.type){\n    case 'select':\n      input = <Form.Group>\n                {props.label && <Form.Label>{props.label}</Form.Label>}\n                <select\n                  className=\"form-control form-control-sm\"\n                  value={props.value}\n                  onChange={props.onChange}\n                >\n                  <option value=\"\">{props.placeholder}</option>\n                  {\n                    props.options.length > 0 ?\n                    props.options.map((option, index) =>\n                      <option key={index} value={option.value}>{option.name}</option>\n                    ) : null\n                  }\n                </select>\n            </Form.Group>\n      break;\n    case 'text':\n    default:\n      input = <Form.Group>\n                {props.label && <Form.Label>{props.label}</Form.Label>}\n                <Form.Control \n                    type={props.type} \n                    placeholder={props.placeholder} \n                    value={props.value}\n                    onChange={props.onChange}\n                    {...props}\n                />\n                <Form.Text className=\"text-muted\">\n                  {props.errorMessage}\n                </Form.Text>\n            </Form.Group>\n  }\n\n\n  return input;\n\n }\n\nexport default Input"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;;AAEtC;AACA;AACA;AACA;;AAEA,MAAMC,KAAK,GAAIC,KAAK,IAAK;EAEvB,IAAIC,KAAK,GAAG,IAAI;EAChB,QAAOD,KAAK,CAACE,IAAI;IACf,KAAK,QAAQ;MACXD,KAAK,gBAAG,oBAAC,IAAI,CAAC,KAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACRD,KAAK,CAACG,KAAK,iBAAI,oBAAC,IAAI,CAAC,KAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAEH,KAAK,CAACG,KAAK,CAAc,eACtD;QACE,SAAS,EAAC,8BAA8B;QACxC,KAAK,EAAEH,KAAK,CAACI,KAAM;QACnB,QAAQ,EAAEJ,KAAK,CAACK,QAAS;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAEzB;QAAQ,KAAK,EAAC,EAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAEL,KAAK,CAACM,WAAW,CAAU,EAE3CN,KAAK,CAACO,OAAO,CAACC,MAAM,GAAG,CAAC,GACxBR,KAAK,CAACO,OAAO,CAACE,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAC9B;QAAQ,GAAG,EAAEA,KAAM;QAAC,KAAK,EAAED,MAAM,CAACN,KAAM;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAEM,MAAM,CAACE,IAAI,CAAU,CAChE,GAAG,IAAI,CAEH,CACA;MACnB;IACF,KAAK,MAAM;IACX;MACEX,KAAK,gBAAG,oBAAC,IAAI,CAAC,KAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACRD,KAAK,CAACG,KAAK,iBAAI,oBAAC,IAAI,CAAC,KAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAEH,KAAK,CAACG,KAAK,CAAc,eACtD,oBAAC,IAAI,CAAC,OAAO;QACT,IAAI,EAAEH,KAAK,CAACE,IAAK;QACjB,WAAW,EAAEF,KAAK,CAACM,WAAY;QAC/B,KAAK,EAAEN,KAAK,CAACI,KAAM;QACnB,QAAQ,EAAEJ,KAAK,CAACK;MAAS,GACrBL,KAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACX,eACF,oBAAC,IAAI,CAAC,IAAI;QAAC,SAAS,EAAC,YAAY;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAC9BA,KAAK,CAACa,YAAY,CACT,CACH;EAAA;EAIvB,OAAOZ,KAAK;AAEb,CAAC;AAEF,eAAeF,KAAK"},"metadata":{},"sourceType":"module"}