{"ast":null,"code":"import axios from \"../helpers/axios\";\nimport { productConstants } from \"./constants\";\nexport const getProductsBySlug = slug => {\n  return async dispatch => {\n    const res = await axios.get(`/products/${slug}`);\n\n    if (res.status === 200) {\n      dispatch({\n        type: productConstants.GET_PRODUCTS_BY_SLUG,\n        payload: res.data\n      });\n    } else {// dispatch({\n      //     type:\n      // })\n    }\n  };\n};\nexport const getProductPage = payload => {\n  return async dispatch => {\n    try {\n      const {\n        cid,\n        type\n      } = payload.params;\n      const res = await axios.get(`/page/${cid}/product`);\n      dispatch({\n        type: productConstants.GET_PRODUCT_PAGE_REQUEST\n      });\n\n      if (res.status === 200) {\n        const {\n          page\n        } = res.data;\n        dispatch({\n          type: productConstants.GET_PRODUCT_PAGE_SUCCESS,\n          payload: {\n            page\n          }\n        });\n      } else {\n        const {\n          error\n        } = res.data;\n        dispatch({\n          type: productConstants.GET_PRODUCT_PAGE_FAILURE,\n          payload: {\n            error\n          }\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const getProductDetailsById = payload => {\n  return async dispatch => {\n    dispatch({\n      type: productConstants.GET_PRODUCT_DETAILS_BY_ID_REQUEST\n    });\n    let res;\n\n    try {\n      const {\n        productId\n      } = payload.params;\n      res = await axios.get(`/product/${productId}`);\n      console.log(res);\n      dispatch({\n        type: productConstants.GET_PRODUCT_DETAILS_BY_ID_SUCCESS,\n        payload: {\n          productDetails: res.data.product\n        }\n      });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: productConstants.GET_PRODUCT_DETAILS_BY_ID_FAILURE,\n        payload: {\n          error: res.data.error\n        }\n      });\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/charr/Desktop/testSite/client/src/actions/product.action.js"],"names":["axios","productConstants","getProductsBySlug","slug","dispatch","res","get","status","type","GET_PRODUCTS_BY_SLUG","payload","data","getProductPage","cid","params","GET_PRODUCT_PAGE_REQUEST","page","GET_PRODUCT_PAGE_SUCCESS","error","GET_PRODUCT_PAGE_FAILURE","console","log","getProductDetailsById","GET_PRODUCT_DETAILS_BY_ID_REQUEST","productId","GET_PRODUCT_DETAILS_BY_ID_SUCCESS","productDetails","product","GET_PRODUCT_DETAILS_BY_ID_FAILURE"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SAASC,gBAAT,QAAiC,aAAjC;AAEA,OAAO,MAAMC,iBAAiB,GAAIC,IAAD,IAAU;AACzC,SAAO,MAAOC,QAAP,IAAoB;AACzB,UAAMC,GAAG,GAAG,MAAML,KAAK,CAACM,GAAN,CAAW,aAAYH,IAAK,EAA5B,CAAlB;;AACA,QAAIE,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACtBH,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAEP,gBAAgB,CAACQ,oBADhB;AAEPC,QAAAA,OAAO,EAAEL,GAAG,CAACM;AAFN,OAAD,CAAR;AAID,KALD,MAKO,CACL;AACA;AACA;AACD;AACF,GAZD;AAaD,CAdM;AAgBP,OAAO,MAAMC,cAAc,GAAIF,OAAD,IAAa;AACzC,SAAO,MAAON,QAAP,IAAoB;AACzB,QAAI;AACF,YAAM;AAAES,QAAAA,GAAF;AAAOL,QAAAA;AAAP,UAAgBE,OAAO,CAACI,MAA9B;AACA,YAAMT,GAAG,GAAG,MAAML,KAAK,CAACM,GAAN,CAAW,SAAQO,GAAI,UAAvB,CAAlB;AACAT,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAEP,gBAAgB,CAACc;AAAzB,OAAD,CAAR;;AACA,UAAIV,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACtB,cAAM;AAAES,UAAAA;AAAF,YAAWX,GAAG,CAACM,IAArB;AACAP,QAAAA,QAAQ,CAAC;AACPI,UAAAA,IAAI,EAAEP,gBAAgB,CAACgB,wBADhB;AAEPP,UAAAA,OAAO,EAAE;AAAEM,YAAAA;AAAF;AAFF,SAAD,CAAR;AAID,OAND,MAMO;AACL,cAAM;AAAEE,UAAAA;AAAF,YAAYb,GAAG,CAACM,IAAtB;AACAP,QAAAA,QAAQ,CAAC;AACPI,UAAAA,IAAI,EAAEP,gBAAgB,CAACkB,wBADhB;AAEPT,UAAAA,OAAO,EAAE;AAAEQ,YAAAA;AAAF;AAFF,SAAD,CAAR;AAID;AACF,KAjBD,CAiBE,OAAOA,KAAP,EAAc;AACdE,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACD;AACF,GArBD;AAsBD,CAvBM;AAyBP,OAAO,MAAMI,qBAAqB,GAAIZ,OAAD,IAAa;AAChD,SAAO,MAAON,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAEP,gBAAgB,CAACsB;AAAzB,KAAD,CAAR;AACA,QAAIlB,GAAJ;;AACA,QAAI;AACF,YAAM;AAAEmB,QAAAA;AAAF,UAAgBd,OAAO,CAACI,MAA9B;AACAT,MAAAA,GAAG,GAAG,MAAML,KAAK,CAACM,GAAN,CAAW,YAAWkB,SAAU,EAAhC,CAAZ;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYhB,GAAZ;AACAD,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAEP,gBAAgB,CAACwB,iCADhB;AAEPf,QAAAA,OAAO,EAAE;AAAEgB,UAAAA,cAAc,EAAErB,GAAG,CAACM,IAAJ,CAASgB;AAA3B;AAFF,OAAD,CAAR;AAID,KARD,CAQE,OAAOT,KAAP,EAAc;AACdE,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAd,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAEP,gBAAgB,CAAC2B,iCADhB;AAEPlB,QAAAA,OAAO,EAAE;AAAEQ,UAAAA,KAAK,EAAEb,GAAG,CAACM,IAAJ,CAASO;AAAlB;AAFF,OAAD,CAAR;AAID;AACF,GAlBD;AAmBD,CApBM","sourcesContent":["import axios from \"../helpers/axios\";\nimport { productConstants } from \"./constants\";\n\nexport const getProductsBySlug = (slug) => {\n  return async (dispatch) => {\n    const res = await axios.get(`/products/${slug}`);\n    if (res.status === 200) {\n      dispatch({\n        type: productConstants.GET_PRODUCTS_BY_SLUG,\n        payload: res.data,\n      });\n    } else {\n      // dispatch({\n      //     type:\n      // })\n    }\n  };\n};\n\nexport const getProductPage = (payload) => {\n  return async (dispatch) => {\n    try {\n      const { cid, type } = payload.params;\n      const res = await axios.get(`/page/${cid}/product`);\n      dispatch({ type: productConstants.GET_PRODUCT_PAGE_REQUEST });\n      if (res.status === 200) {\n        const { page } = res.data;\n        dispatch({\n          type: productConstants.GET_PRODUCT_PAGE_SUCCESS,\n          payload: { page },\n        });\n      } else {\n        const { error } = res.data;\n        dispatch({\n          type: productConstants.GET_PRODUCT_PAGE_FAILURE,\n          payload: { error },\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const getProductDetailsById = (payload) => {\n  return async (dispatch) => {\n    dispatch({ type: productConstants.GET_PRODUCT_DETAILS_BY_ID_REQUEST });\n    let res;\n    try {\n      const { productId } = payload.params;\n      res = await axios.get(`/product/${productId}`);\n      console.log(res);\n      dispatch({\n        type: productConstants.GET_PRODUCT_DETAILS_BY_ID_SUCCESS,\n        payload: { productDetails: res.data.product },\n      });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: productConstants.GET_PRODUCT_DETAILS_BY_ID_FAILURE,\n        payload: { error: res.data.error },\n      });\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}